<%--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2010 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
--%>

<%--
  * This SerializeGiftListDataAtom.jspf file is built as a snippet to create an Atom feed from the Gift List information.
  * 
  * This snippet is for Gift List that the shopper selects from the store.
  * 
  * The code in this file supports Atom feeds containing the following types of data:
  *	- Catalog entries (added to the Gift List by the shopper)
--%>

<%@ taglib uri="http://commerce.ibm.com/foundation" prefix="wcf"%>

<%-- ------------------------------------------------------------------------------------------------------------- --%>	
<%-- Atom Feed --%>
<%-- Special characters have to be xml escaped.
& &amp;
< &lt;
> &gt;
" &quot; or &#034;
<c:out /> encodes xml by default. This produces more readable code.
--%>
			
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:ns2="http://a9.com/-/spec/opensearch/1.1/" xmlns:ns3="http://www.w3.org/1999/xhtml">
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- The following are the mandatory and optional elements to create an Atom feed.
	     These are based on the Atom Syndication Format specification (Atom 1.0).
	     --%>
	
	<%-- feed:author:name
	     This is a mandatory element if you do not provide values for all entry:author:name elements. These elements are located in the specialized feed entry JSPs
	     included at the end of this file.
	     The code below set the value in Gift List external identifier name for author:name.
	     It is not necessary to set this entry if all your entry:author:name elements contain a value.
	     See the Atom Syndication Format specification for further details.
	     --%>
	
	<author>
	<name><c:out value="${giftListDatas.giftListIdentifier.giftListExternalIdentifier.storeIdentifier.externalIdentifier.nameIdentifier}" /></name>
	<%-- <uri></uri> --%>
	<%-- <email></email> --%>
	</author>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:category
	     This is an optional element.
	     --%>
	
	<%--
	<category term="" />
	--%>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:contributor
	     This is an optional element.
	     --%>
	
	<%--
	<contributor>
	<name></name>
	<uri></uri>
	<email></email>
	</contributor>
	--%>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:generator
	     This is an optional element.
	     --%>
	
	<%-- <generator uri="" version=""></generator> --%>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:icon
	     This is an optional element.
	     --%>
	
	<%-- <icon></icon> --%>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:updated
	     This is a mandatory element.
	     The Atom Feed Syndication format requires that this value have a specific format.
	     See the Atom Syndication Format specification for further details.
	     --%>
	
	<updated><c:out value="${giftListDatas.lastUpdate}" /></updated>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:id
	     This is a mandatory element. By default, we use a combination of URL, storeId, giftListIdentifier and langId.
	     You can add or remove some of these as IDs depending on how you want to uniquely identify a feed.
	     --%>        
	
	<id><c:out value="feed:id:${pageContext.request.serverName}/store/${storeId}/GiftList/${giftListDatas.giftListIdentifier.giftListExternalIdentifier.externalIdentifier}/language/${langId}" /></id>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:link
	     This is a recommended element.
	     It points to the wish list or gift list display page
	     --%>
	<c:set var="ListDisplayURL" value="" />
	<c:choose>
		<c:when test="${giftListDatas.registry}">
			<c:url value="${GiftRegistryDisplayCommand}" var="ListDisplayURL">
				<c:param name="catalogId" value="${catalogId}" />
				<c:param name="storeId" value="${storeId}" />
				<c:param name="langId" value="${langId}" />
				<c:param name="externalId" value="${giftListDatas.giftListIdentifier.giftListExternalIdentifier.externalIdentifier}" />
			</c:url>
		</c:when>
		<c:otherwise>     
			<c:url value="${WishListDisplayCommand}" var="ListDisplayURL">
				<c:param name="catalogId" value="${catalogId}" />
				<c:param name="storeId" value="${storeId}" />
				<c:param name="langId" value="${langId}" />
				<c:param name="wishListEMail" value="${giftListDatas.optForEmail}" />
				<c:param name="externalId" value="${giftListDatas.giftListIdentifier.giftListExternalIdentifier.externalIdentifier}" />
			</c:url>
		</c:otherwise>
	</c:choose> 
	<c:set var="targetLink" value="${ListDisplayURL}${'&guestAccessKey='}${giftListDatas.accessSpecifier.guestAccessKey}" />
	<link rel="self" href="<c:out value="${targetLink}"/>" />
	<link rel="alternate" href="<c:out value="${storeLink}"/>" />
	 
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:logo
	     This is an optional element.
	     --%>
	
	<%-- <logo></logo> --%>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:rights
	     This is an optional element.
	     --%>
	
	<%-- <rights></rights> --%>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:subtitle
	     This is an optional element.
	     --%>

	<%-- <subtitle></subtitle> --%>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:title
	     This is a mandatory element.
	     The code below gets the proper value for title from the Gift List name.
	     See the Atom Syndication Format specification for further details.
	--%>     
	<c:set var="title" value="${giftListDatas.description.name}" />
	<c:if test="${empty title || title == null}">
		<c:set var="title" value="${giftListDatas.description.description}" />
	</c:if>
	<title type="text"><c:out value="${title}" /></title>
	
	<%-- The following are some Atom Feed extensions that may be useful. These are not standard, but may prove useful with integration with third party software or maybe with some readers. --%>
	<%-- If they are not used, they can be commented out --%>
	<%-- The Atom Syndication Format allows for these types of extensions and explicitly states: --%>
	<%-- 6.3 Processing Foreign Markup --%>
	<%-- Atom Processors that encounter foreign markup in a location that is legal according to this specification MUST NOT stop processing or signal an error. It might be the case that the Atom Processor is able to process the foreign markup correctly and does so. Otherwise, such markup is termed "unknown foreign markup". --%>
	<%-- When unknown foreign markup is encountered as a child of atom:entry, atom:feed, or a Person construct, Atom Processors MAY bypass the markup and any textual content and MUST NOT change their behavior as a result of the markup's presence. --%>
	<%-- When unknown foreign markup is encountered in a Text Construct or atom:content element, software SHOULD ignore the markup and process any text content of foreign elements as though the surrounding markup were not present. --%>
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	
	<%-- feed:eventType  --%>
	<eventType><c:out value="${giftListDatas.eventInformation.event}" /></eventType>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:guestMessage  --%>
	<guestMessage><c:out value="${giftListDatas.description.guestMessage}" /></guestMessage>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- feed:eventDate --%>
	<fmt:parseDate value="${giftListDatas.eventInformation.eventDate}" type="date" pattern="yyyy-MM-dd" var="fmtEventData"/>
	<eventDate><fmt:formatDate value="${fmtEventData}" type="date" dateStyle="long"/></eventDate>
	
	<%-- Date format is yyyy-MM-dd --%>
	<c:set var="eventDate" value="${fn:split(giftListDatas.eventInformation.eventDate, '-')}" />
	
	<%-- feed:eventDay --%>
	<eventDay><c:out value="${eventDate[2]}" /></eventDay>
	
	<%-- feed:eventMonth --%>
	<eventMonth><c:out value="${eventDate[1]}" /></eventMonth>
	
	<%-- feed:eventMonthDesc --%>
	<eventMonthDesc><fmt:formatDate value="${fmtEventData}" type="date" pattern="MMM"/></eventMonthDesc>

	<%-- feed:eventYear --%>
	<eventYear><c:out value="${eventDate[0]}" /></eventYear>
	
	<c:set var="requested" value="0" />
	<c:set var="bought" value="0" />
	<c:forEach var="giftListData" items="${giftListDatas.item}" >
		<c:set var="requested" value="${requested + giftListData.quantityRequested.value}" />
		<c:set var="bought" value="${bought + giftListData.quantityBought.value}" />
	</c:forEach>
	
	<%-- feed:totalItemsRequested --%>
	<totalItemsRequested><fmt:parseNumber value="${requested}" parseLocale="true" integerOnly="true"/></totalItemsRequested>
	
	<%-- feed:totalItemsBought --%>
	<totalItemsBought><fmt:parseNumber value="${bought}" parseLocale="true" integerOnly="true"/></totalItemsBought>
	
	<%-- feed:totalItemsNeeded --%>
	<totalItemsNeeded><fmt:parseNumber value="${requested - bought}" parseLocale="true" integerOnly="true"/></totalItemsNeeded>
	
	<%-- ------------------------------------------------------------------------------------------------------------- --%>
	<%-- Begin: Iteration through Gift List content. Process every data type.
	     Each one of the files below will create the appropriate Atom feed entry for each data type.
	     Each entry consists of several optional and mandatory elements, for which the data type provides all the necessary information.
	     If you want to customize the content, look for the <content> Atom feed tag within the specific feed entry JSP files included below.
	     See the Atom Syndication Format specification for further details.
	     --%>
	
	<%-- Call the service to get the details for the catalog entries in the Gift List --%>
	<c:set var="catalogEntries" value="" />
	<c:if test="${!empty giftListDatas.item}">
		<wcf:getData type="com.ibm.commerce.catalog.facade.datatypes.CatalogEntryType[]" var="catalogEntries" expressionBuilder="getPublishedCatalogEntryDetailsByIDs">
			<wcf:param name="accessProfile" value="IBM_Store_Details" />
			<wcf:contextData name="storeId" data="${storeId}"/>
			<wcf:contextData name="catalogId" data="${catalogId}"/>
			<wcf:contextData name="langId" data="${langId}"/>
			<wcf:param name="dataLanguageIds" value="${langId}"/>
			<c:forEach var="giftListData" items="${giftListDatas.item}" >
				<wcf:param name="UniqueID" value="${giftListData.catalogEntryIdentifier.uniqueID}" />
			</c:forEach>
		</wcf:getData>
	</c:if>
	
	<c:forEach var="catalogEntry" items="${catalogEntries}" >
		
		<%-- ------------------------------------------------------------------------------------------------------------- --%>	
		<%-- Catalog Entries --%>
		<%@ include file="SerializeGiftListDataCatalogEntryAtom.jspf"%>
		
	</c:forEach>
	<%-- End: Iteration through Gift List content --%>
</feed>