<%--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2012 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
--%>
<%-- 
  *****
  * This JSP file prepares the data structure for titles (text or images) assigned to the eSpot
  *****
--%>
<!-- BEGIN ESpotTitle_Data.jspf -->
<c:set var="titleObjectCount" value="0" />
<jsp:useBean id="titleContentTypeMap" class="java.util.HashMap" type="java.util.Map"/>
<jsp:useBean id="titleContentDescriptionMap" class="java.util.HashMap" type="java.util.Map"/>
<jsp:useBean id="titleContentUrlMap" class="java.util.HashMap" type="java.util.Map"/>
<jsp:useBean id="titleContentImageMap" class="java.util.HashMap" type="java.util.Map"/>
<jsp:useBean id="titleContentTextMap" class="java.util.HashMap" type="java.util.Map"/>
<jsp:useBean id="titleContentAssetPathMap" class="java.util.HashMap" type="java.util.Map"/>

<c:forEach var="baseCurrentTitle" items="${marketingSpotDatas.marketingSpotDataTitle}">
    <c:set var="currentTitle" value="${baseCurrentTitle.marketingContent}"/>
		<c:set var="titleObjectCount" value="${titleObjectCount+1}" />

        <%--
          *
          * Set up the URL to call when the image or text is clicked.
          *
        --%>
		<c:set var="contentClickUrl" value="${param.contentClickUrl}"/>
		<c:if test = "${empty contentClickUrl}">
			<c:url value="${currentTitle.url}" var="contentClickUrl">
				<c:if test="${!empty param.errorViewName}" >
					<c:param name="errorViewName" value="${param.errorViewName}" />
					<c:if test="${!empty param.orderId}">
						<c:param name="orderId" value="${param.orderId}"/>
					</c:if>
				</c:if>
			</c:url>
		</c:if>

        <c:url value="${clickInfoCommand}" var="ClickInfoURL">
            <c:param name="evtype" value="CpgnClick" />
            <c:param name="mpe_id" value="${marketingSpotDatas.marketingSpotIdentifier.uniqueID}" />
            <c:param name="intv_id" value="${baseCurrentTitle.activityIdentifier.uniqueID}" />
            <c:param name="storeId" value="${storeId}" />
            <c:param name="catalogId" value="${catalogId}" />
            <c:param name="langId" value="${langId}" />
            <c:forEach var="expResult" items="${baseCurrentTitle.experimentResult}" begin="0" end="0">
                    <c:param name="experimentId" value="${expResult.experiment.uniqueID}" />
                    <c:param name="testElementId" value="${expResult.testElement.uniqueID}" />
                    <c:param name="expDataType" value="${baseCurrentTitle.dataType}" />
                    <c:param name="expDataUniqueID" value="${baseCurrentTitle.uniqueID}" />
            </c:forEach>
            <c:param name="URL" value="${contentClickUrl}" />
        </c:url>
        
        <c:choose>
            <c:when test="${currentTitle.marketingContentFormat.name == 'File'}">
                <%--
                  *
                  * For handling language specific assets and descriptions
                  *
                --%>
                <c:set var="attachment" value="${currentTitle.attachment}"/>
                <c:set var="foundLanguage" value="false"/>
                
                <%-- Store the index of the asset for the current language in the array --%>
                <c:set var="assetIndex" value="0"/>
                
                <%-- Check if there are any attachment assets --%>
                <c:if test="${fn:length(attachment.attachmentAsset) > 0}">
                    <%-- Go through each asset and scan the list of languages specified --%>
                    <%-- Take the first asset found with the current selected language --%>
                    <%-- If no language specific asset is found, use the first asset as the default --%>
                    <c:forEach var="i" begin="0" end="${fn:length(attachment.attachmentAsset)-1}">
                        <c:forEach var="language" items="${attachment.attachmentAsset[i].language}">
                            <c:if test="${(language == langId) && (!foundLanguage)}">
                                <c:set var="foundLanguage" value="true"/>
                                <c:set var="assetIndex" value="${i}"/>
                            </c:if>
                        </c:forEach>
                    </c:forEach>
                </c:if>

                <c:set var="foundLanguage" value="false"/>
                <%-- Store the index of the attachment description for the current language in the array --%>
                <c:set var="descriptionIndex" value="0"/>

                <%-- Check if there are any attachment descriptions --%>
                <c:if test="${fn:length(attachment.attachmentDescription) > 0}">
                    <%-- Go through each description and find the description associated with the current language --%>
                    <%-- If no language specific description is found, use the default English description --%>
                    <c:forEach var="i" begin="0" end="${fn:length(attachment.attachmentDescription)-1}">
                        <c:forEach var="language" items="${attachment.attachmentDescription[i].language}">
                            <c:if test="${(language == langId) && (!foundLanguage)}">
                                <c:set var="foundLanguage" value="true"/>
                                <c:set var="descriptionIndex" value="${i}"/>
                            </c:if>
                        </c:forEach>
                    </c:forEach>
                </c:if>
                
                <c:set var="contentMimeType" value="${currentTitle.mimeType}"/>
                <c:set var="assetMimeType" value="${attachment.attachmentAsset[assetIndex].mimeType}"/>
                <c:if test="${(empty contentMimeType) && 
                	(fn:endsWith(attachment.attachmentAsset[assetIndex].attachmentAssetPath, '.gif') ||
                	 fn:endsWith(attachment.attachmentAsset[assetIndex].attachmentAssetPath, '.jpg') ||
                	 fn:endsWith(attachment.attachmentAsset[assetIndex].attachmentAssetPath, '.jpeg') ||
                	 fn:endsWith(attachment.attachmentAsset[assetIndex].attachmentAssetPath, '.png')	)}">
                	 <c:set var="contentMimeType" value="image"/>
                </c:if>
                <c:if test="${(empty contentMimeType) && (fn:endsWith(attachment.attachmentAsset[assetIndex].attachmentAssetPath, '.swf') )}">
                	<c:set var="contentMimeType" value="application"/>
                	<c:set var="assetMimeType" value="application/x-shockwave-flash"/>
                </c:if>
                
                <c:set var="contentPath" value=""/>
                <c:choose>
                	<c:when test="${(fn:startsWith(attachment.attachmentAsset[assetIndex].attachmentAssetPath, 'http://') ||
                		fn:startsWith(attachment.attachmentAsset[assetIndex].attachmentAssetPath, 'https://')	)}">
                		<c:set var="contentPath" value="${attachment.attachmentAsset[assetIndex].attachmentAssetPath}"/>
                	</c:when>
                	<c:when test="${empty attachment.attachmentAsset[assetIndex].rootDirectory}">
                		<c:set var="contentPath" value="${storeImgDirHostPath}${storeImgDir}${attachment.attachmentAsset[assetIndex].attachmentAssetPath}"/>
                	</c:when>
                	<c:otherwise>
                		<c:set var="contentPath" value="${env_imageContextPathHostPath}${env_imageContextPath}/${attachment.attachmentAsset[assetIndex].rootDirectory}/${attachment.attachmentAsset[assetIndex].attachmentAssetPath}"/>
                	</c:otherwise>
                </c:choose>		
            	
				<c:choose>
	              	<c:when test="${(contentMimeType eq 'image') || (contentMimeType eq 'images')}">
						<c:set target="${titleContentTypeMap}" property="${titleObjectCount}" value="image" />
						<c:if test="${!empty currentTitle.url}">
							<c:set target="${titleContentUrlMap}" property="${titleObjectCount}" value="${env_absoluteUrl}${ClickInfoURL}" />
						</c:if>
						<c:set target="${titleContentImageMap}" property="${titleObjectCount}" value="${contentPath}" />
						<c:set target="${titleContentDescriptionMap}" property="${titleObjectCount}" value="${attachment.attachmentDescription[descriptionIndex].shortDescription}" />
					</c:when>
                    <c:when test="${(contentMimeType eq 'application') ||
                                    (contentMimeType eq 'applications') ||
                                    (contentMimeType eq 'text') ||
                                    (contentMimeType eq 'textyv') ||
                                    (contentMimeType eq 'video') ||
                                    (contentMimeType eq 'audio') ||
                                    (contentMimeType eq 'model')
                                    }">
                        <%--
                          *
                          * It is content: flash, audio, or other.
                          *
                        --%>
                        <c:choose>
                            <c:when test="${(assetMimeType eq 'application/x-shockwave-flash')}" >
								<c:set target="${titleContentTypeMap}" property="${titleObjectCount}" value="flash" />
								<c:set target="${titleContentDescriptionMap}" property="${titleObjectCount}" value="${currentTitle.marketingContentDescription[0].marketingText}" />
								<c:set target="${titleContentUrlMap}" property="${titleObjectCount}" value="${contentPath}" />
                            </c:when>
                            <c:otherwise>
								<c:set target="${titleContentTypeMap}" property="${titleObjectCount}" value="application" />
								<c:set target="${titleContentAssetPathMap}" property="${titleObjectCount}" value="${contentPath}" />
								<c:set target="${titleContentImageMap}" property="${titleObjectCount}" value="${env_imageContextPathHostPath}${env_imageContextPath}/${attachment.attachmentAsset[assetIndex].rootDirectory}/${attachment.attachmentUsage.image}"/>
								<c:set target="${titleContentDescriptionMap}" property="${titleObjectCount}" value="${attachment.attachmentDescription[descriptionIndex].shortDescription}"/>
								
								<c:if test="${!empty currentTitle.url}">
									<c:set target="${titleContentUrlMap}" property="${titleObjectCount}" value="${env_absoluteUrl}${ClickInfoURL}" />
									<c:set target="${titleContentTextMap}" property="${titleObjectCount}" value="${currentTitle.marketingContentDescription[0].marketingText}"/>
								</c:if>
                            </c:otherwise>
                        </c:choose>
                    </c:when>
                    <c:otherwise>
                        <%--
                          * Content type is File, but no image or known mime type is associated, so display a link to the URL.
                          * Display the content text, with optional click information.
                          *
                        --%>
						<c:set target="${titleContentTypeMap}" property="${titleObjectCount}" value="fileasset" />
						<c:set target="${titleContentAssetPathMap}" property="${titleObjectCount}" value="${currentTitle.attachment.attachmentAsset[0].attachmentAssetPath}" />
                        <c:if test="${!empty currentTitle.url}">
                            <c:set target="${titleContentUrlMap}" property="${titleObjectCount}" value="${env_absoluteUrl}${ClickInfoURL}" />
                        </c:if>
                        <c:if test="${!empty currentTitle.marketingContentDescription[0].marketingText}">
                           	<c:set target="${titleContentTextMap}" property="${titleObjectCount}" value="${currentTitle.marketingContentDescription[0].marketingText}"/>
                        </c:if>
                    </c:otherwise>
                </c:choose>
            </c:when>
            
            <c:when test="${currentTitle.marketingContentFormat.name == 'Text'}">
				<c:set target="${titleContentTypeMap}" property="${titleObjectCount}" value="Text" />
                <%--
                  *
                  * Display the content text, with optional click information.
                  *
                --%>                          
				<c:if test="${!empty currentTitle.url}">
					<c:set target="${titleContentUrlMap}" property="${titleObjectCount}" value="${env_absoluteUrl}${ClickInfoURL}" />
				</c:if>
				<c:set target="${titleContentTextMap}" property="${titleObjectCount}" value="${currentTitle.marketingContentDescription[0].marketingText}"/>
            </c:when>            
        </c:choose>
</c:forEach>
<!-- END ESpotTitle_Data.jspf -->
