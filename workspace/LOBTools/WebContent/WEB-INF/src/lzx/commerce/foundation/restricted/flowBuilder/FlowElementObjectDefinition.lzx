<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2007, 2010 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<library>
	<!---
		<p>This is the base class for all flow builder element object definitions. To add a new of flow element, 
		create a new class that extends this base class. Implementations of this class must provide
		the following attributes:
		<ul>
			<li><code>{@link wcfObjectDefinition#objectType objectType}</code> - The unique name of this flow element object. </li>
			<li><code>{@link wcfFlowElementObjectDefinition#elemTemplateType elemTemplateType}</code> - The type of this flow element object. </li>
			<li><code>{@link wcfObjectDefinition#headerIcon headerIcon}</code> - The image resource used in the header of a properties view.
				This should be approximately 63x60 pixels in size.</li>
			<li><code>{@link wcfFlowElementObjectDefinition#flowIcon flowIcon}</code> - The image resource used in the main flow diagram. This should be approximately 32x32 pixels in size.</li>
			<li><code>{@link wcfFlowElementObjectDefinition#paletteIcon paletteIcon}</code> - The image resource that is shown in the palette of the flow builder.
				This should be approximately 20x20 pixels in size.</li>
			<li><code>{@link wcfObjectDefinition#propertiesClass propertiesClass}</code> - Optional name of the properties view class that manages this flow element. The provided class
				must extend from {@link wcfFlowElementProperties}.</li>
			<li><code>{@link wcfFlowElementObjectDefinition#summaryClass summaryClass}</code> - Optional name of the summary view class for this flow element, which is used to
				display text in the main flow diagram beneath the flow element icon. The provided class must extend from {@link wcfFlowElementSummary}. By default, there will be
				no summary text provided for the flow element.</li>
		</ul>
		</p>
		
		<p>The following attributes have already been defined and must not be changed:
		<ul>
			<li><code>{@link wcfObjectDefinition#idProperty idProperty}</code> - The property containing the identifier for the flow element is
				always <code>elementName</code>. The value is unique within a flow.</li>
			<li><code>{@link wcfObjectDefinition#objectGroups objectGroups}</code> - All flow elements are part of the object group
				<code>FlowElement</code>. This is a reserved object group and must not be changed.</li>
		</ul>
		</p>
		
		<p>Implementations for new flow element object definitions should not use {@link wcfCreateService} or {@link wcfUpdateService}. The component
		specific services like {@link prcFlowElementCreateService} and {@link prcFlowElementUpdateService} should be used instead. All flow elements
		must have exactly one child instance of creation service and update service. </p>
		
		<p>See {@link wcfChildObjectDefinition} for more details on what child classes can be instantiated as part of the flow element object definition.</p>
		
		<p>All flow elements have the following reserved {@link wcfModelProperty properties} that must be returned by the serializing JSP
		of the flow element:
		<ul>
			<li><code>elementName</code> - This read-only property is generated	by the server when the flow element is created. </li>
			<li><code>sequence</code> - This read-only property is managed by Flow Builder and contains the relative sequence of this flow
				element compared to its sibling flow elements. Flow elements of the same parent with smaller values will appear first
				in Flow Builder and will be evaluated first by the back-end services.</li>
		</ul>
		</p>
		
		@keywords abstract
	-->
	<class name="wcfFlowElementObjectDefinition" extends="wcfChildObjectDefinition"
		idProperty="elementName" creatable="false" objectGroups="FlowElement">

		<!--- Resource name to use in the flow diagram for this flow element. -->
		<attribute name="flowIcon" type="string"/>

		<!--- Resource name to use in the flow builder palette for this flow element. -->
		<attribute name="paletteIcon" type="string"/>

		<!--- The element template type. -->
		<attribute name="elemTemplateType" type="string" />

		<!--- Whether or not this is a top-level element. The default value, <code>false</code>, should never have to be changed. -->
		<attribute name="isTopElement" type="string"/>

		<!---
			This attribute specifies the relative URL to the help file containing the explanation of this object.
			The default value of this attribute is the empty string.
		-->		
		<attribute name="helpLink" type="string"/>
		
		<!--- @keywords private -->
		<method name="initializeDefinition" args="model">
			<![CDATA[
			super.initializeDefinition(model);
			if (typeof(this["flowIcon"]) == "undefined") {
				this.flowIcon = null;
			}
			if (typeof(this["paletteIcon"]) == "undefined") {
				this.paletteIcon = null;
			}
			if (typeof(this["elemTemplateType"]) == "undefined") {
				this.elemTemplateType = "";
			}
			if (typeof(this["isTopElement"]) == "undefined") {
				this.isTopElement = "false";
			}
			if (typeof(this["helpLink"]) == "undefined") {
				this.helpLink = "";
			}
			]]>
		</method>
		
		<!--- @keywords private -->
		<method name="integrateBaseObject">
			<![CDATA[
			super.integrateBaseObject();
			if (typeof(this["flowIcon"]) == "undefined"){
				this.flowIcon = this.baseDefinition["flowIcon"];
			}
			if (typeof(this["paletteIcon"]) == "undefined") {
				this.paletteIcon = this.baseDefinition["paletteIcon"];
			}
			if(typeof(this["elemTemplateType"]) == "undefined" ){
				this.elemTemplateType = this.baseDefinition["elemTemplateType"];
			}
			if(typeof(this["isTopElement"]) == "undefined" ){
				this.isTopElement = this.baseDefinition["isTopElement"];
			}
			if(typeof(this["helpLink"]) == "undefined" ){
				this.helpLink = this.baseDefinition["helpLink"];
			}
			]]>
		</method>

	</class>

</library>
