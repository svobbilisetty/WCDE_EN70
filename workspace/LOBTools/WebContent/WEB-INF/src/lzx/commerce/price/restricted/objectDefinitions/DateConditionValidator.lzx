<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2011 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<library>
	
	<!---
		<p>This is an object level validator that ensures that the start date is not after the end date and
		the start date is not equals the end date.
		No error will be reported if either the start date or end date are blank.</p>
	-->
	<class name="prcDateConditionValidator" extends="wcfStartDateEndDateValidator">
		
		<!--- @keywords private -->
		<attribute name="message_specifyAStartTime" type="string" value="${prcPriceResources.errorMsg_SpecifyAStartTime.string}"/>
		<!--- @keywords private -->
		<attribute name="message_specifyAEndTime" type="string" value="${prcPriceResources.errorMsg_SpecifyAEndTime.string}"/>
		<!--- @keywords private -->
		<attribute name="message_StartTimeEqualsEndTime" type="string" value="${prcPriceResources.errorMsg_StartTimeEqualsEndTime.string}"/>
		
		<!---
			@keywords private 
		 -->
		<method name="validate" args="o, property=null">
			<![CDATA[
			if(!o){
				return; // nothing to validate
			}
			
			o.clearValidationError(this);
			o.getProperty("startTime").clearValidationError(this);
			o.getProperty("endTime").clearValidationError(this);

			var startO = o.getObject(this.startDateObjectPath);
			var endO = o.getObject(this.endDateObjectPath);

			if(startO && endO) {
				var startDateProperty = startO.getProperty(this.startDatePropertyName);
				var endDateProperty = endO.getProperty(this.endDatePropertyName);

				var clearError = true;
				
				if(this.isEnabled(o)) {
					var startDate = wcfDateUtil.parse(startDateProperty.value, wcfDateUtil.DATE_TIME_FORMAT);
					var endDate = wcfDateUtil.parse(endDateProperty.value, wcfDateUtil.DATE_TIME_FORMAT);
					
					if (startDateProperty.enabled && endDateProperty.enabled && startDate != null && endDate != null && startDate.getTime() >= endDate.getTime()) {
						endDateProperty.addValidationError(this, this.getErrorMessage("endDateMustBeAfterStartDate", []));
						clearError = false;
					}
				}
				
				if(clearError) {
					endDateProperty.clearValidationError(this);
				}
			}
			
			if (o.getPropertyValue("isAllThroughTheDay") == "false" ) {
				
				var startTime = wcfDateUtil.parse(o.getPropertyValue("startTime"), wcfDateUtil.TIME_FORMAT);
				if (startTime == null || startTime == "") {
				    o.getProperty("startTime").addValidationError(this, this.message_specifyAStartTime);
				}
				
				var endTime = wcfDateUtil.parse(o.getPropertyValue("endTime"), wcfDateUtil.TIME_FORMAT);
				if (endTime == null || endTime == "" ) {
				    o.getProperty("endTime").addValidationError(this, this.message_specifyAEndTime);
				}
				
				if(startTime != null && startTime != "" && endTime != null && endTime != "" && startTime.getTime() == endTime.getTime() ) {
				    o.getProperty("endTime").addValidationError(this, this.message_StartTimeEqualsEndTime);
				}
				
			} 
			
			]]>
		</method>
		
	</class>
</library>