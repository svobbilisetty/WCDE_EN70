<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2007, 2010 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<library>

	<!---
		@keywords private
		
		This class implements the tab used in the work area in Management Center. Business object
		editor that is displayed in the work area is controlled by the associated tab.
	-->
	<class name="wcfToolTab" extends="basecomponent" focusable="false">
		<!---
			Identifier of the tool. This is a required attribute.
		-->
		<attribute name="objectId" type="string" />
		<!---
			Instance of the tool. This is a required attribute.
		-->
		<attribute name="tool" />
		<!---
			Text to display on the tab.
		-->
		<attribute name="displayName" type="string" value="${tool.displayName}" />

		<!--- @keywords private -->
		<attribute name="active" type="boolean" value="false" />
		<!--- @keywords private -->
		<attribute name="hover" type="boolean" value="false" />
		<!--- @keywords private -->
		<attribute name="valign" value="top" />
		
		<!--- @keywords private -->
		<method name="init">
			<![CDATA[
			super.init();
			wcfCanvasMenu.addView(this);
			]]>
		</method>

		<view name="activeTab" visible="${classroot.active}" x="2" focusable="true">
			<simplelayout axis="x" />

			<view name="left" resource="toolTabLeftActive" />
			<view>
				<view name="background" resource="toolTabCenterActive" width="${immediateparent.tabIcon.width}" stretches="width" />
				<view name="tabIcon" y="${classroot.getMiddleY(immediateparent.height, this.height)}" resource="${classroot.activeIconSrc}" />
			</view>
			<view>
				<view name="background" resource="toolTabCenterActive" width="${parent.text.width + 10}" stretches="width" />
				<text name="text" x="5" y="${classroot.getMiddleY(immediateparent.height, this.height)}" text="${classroot.displayName}" resize="true" />
			</view>
			<view name="close" height="22" bgcolor="white">
				<!--- @keywords private -->
				<handler name="onclick">
					<![CDATA[
						toolsController.closeTool(classroot.objectId);
					]]>
				</handler>
				<!--- @keywords private -->
				<handler name="onmouseover">
					<![CDATA[
						classroot.setAttribute("hover", true);
						this.button.setAttribute('resource', "toolTabCloseActiveHover");
					]]>
				</handler>
				<!--- @keywords private -->
				<handler name="onmouseout">
					<![CDATA[
						classroot.setAttribute("hover", false);
						this.button.setAttribute('resource', "toolTabCloseActive");
					]]>
				</handler>
				<view name="button" resource="toolTabCloseActive" />
			</view>
			<view name="right" resource="toolTabRightActive" />

			<!--- @keywords private -->
			<handler name="onclick">
				<![CDATA[
					toolsController.focusTool(classroot.objectId);
				]]>
			</handler>
			<!--- @keywords private -->
			<handler name="onmouseover">
				<![CDATA[
					classroot.setAttribute("hover", true);
				]]>
			</handler>
			<!--- @keywords private -->
			<handler name="onmouseout">
				<![CDATA[
					classroot.setAttribute("hover", false);
				]]>
			</handler>
			<!--- @keywords private -->
			<handler name="onkeydown" args="k">
				<![CDATA[
					if (k == 27) {
						this.close.onclick.sendEvent();
					}
				]]>
			</handler>
			<!--- @keywords private -->
			<handler name="onfocus">
				<![CDATA[
				if(!this.parent["activeTabIndicator"]){
			    	new lz.wcfFocusIndicator(this.parent, {
				    	name: "activeTabIndicator",
				    	focusableView: this,
				    	indicatorView: this,
				    	offset: 1
				    });
			    }
				]]>
			</handler>
		</view>

		<view name="inactiveTab" visible="${!classroot.active}" x="2" focusable="true">
			<simplelayout axis="x" />

			<view name="left" resource="toolTabLeft" />
			<view>
				<view name="background" resource="toolTabCenter" width="${immediateparent.tabIcon.width}" stretches="width" />
				<view name="tabIcon" y="${classroot.getMiddleY(immediateparent.height, this.height)}" resource="${classroot.inactiveIconSrc}" />
			</view>
			<view>
				<view name="background" resource="toolTabCenter" width="${parent.text.width + 10}" stretches="width" />
				<text name="text" x="5" y="${classroot.getMiddleY(immediateparent.height, this.height)}" text="${classroot.displayName}" fgcolor="${classroot.style.textcolor}" resize="true" />
			</view>
			<view name="close">
				<!--- @keywords private -->
				<handler name="onclick">
					<![CDATA[
						toolsController.closeTool(classroot.objectId);
					]]>
				</handler>
				<!--- @keywords private -->
				<handler name="onmouseover">
					<![CDATA[
						classroot.setAttribute("hover", true);
						this.button.setAttribute('resource', "toolTabCloseHover");
					]]>
				</handler>
				<!--- @keywords private -->
				<handler name="onmouseout">
					<![CDATA[
						classroot.setAttribute("hover", false);
						this.button.setAttribute('resource', "toolTabCloseBlank");
					]]>
				</handler>
				<view name="button" resource="toolTabCloseBlank" />
			</view>
			<view name="right" resource="toolTabRight" />

			<!--- @keywords private -->
			<handler name="onclick">
				<![CDATA[
					toolsController.focusTool(classroot.objectId);
				]]>
			</handler>
			<!--- @keywords private -->
			<handler name="onmouseover">
				<![CDATA[
					classroot.setAttribute("hover", true);
					this.close.button.setAttribute('resource', "toolTabClose");
				]]>
			</handler>
			<!--- @keywords private -->
			<handler name="onmouseout">
				<![CDATA[
					classroot.setAttribute("hover", false);
					this.close.button.setAttribute('resource', "toolTabCloseBlank");
				]]>
			</handler>
			<!--- @keywords private -->
			<handler name="onkeydown" args="k">
				<![CDATA[
					if (k == 32 || k == 13) {
						this.onclick.sendEvent();
					}
				]]>
			</handler>
			<!--- @keywords private -->
			<handler name="onfocus">
				<![CDATA[
				if(!this.parent["inactiveTabIndicator"]){
			    	new lz.wcfFocusIndicator(this.parent, {
				    	name: "inactiveTabIndicator",
				    	focusableView: this,
				    	indicatorView: this,
				    	offset: 1
				    });
			    }
				]]>
			</handler>
		</view>

		<!---
			This method brings this tab into focus.
		-->
		<method name="focus">
			<![CDATA[
				this.setAttribute("active", true);
				if (!wcfViewUtil.containsView(this.tool, lz.Focus.getFocus())) {
					lz.Focus.setFocus(this, false);
				}
			]]>
		</method>

		<!---
			This method unfocuses this tab.
		-->
		<method name="unfocus">
			<![CDATA[
				this.setAttribute("active", false);
			]]>
		</method>

		<!---
			Returns the y coordinate of a the given subview in the given container. This y coordinate
			ensures the subview is placed in the middle of the container vertically.
			@param number containerHeight: The height of the container view that contains the given subview
			@param number subviewHeight: The height of the view that must be placed in the vertical middle of the container
			@return number: the y coordinate of the subview relative to the container.
		 -->
		<method name="getMiddleY" args="containerHeight, subviewHeight">
			<![CDATA[
				return Math.round((containerHeight - subviewHeight + 1) / 2);
			]]>
		</method>
	</class>

</library>
