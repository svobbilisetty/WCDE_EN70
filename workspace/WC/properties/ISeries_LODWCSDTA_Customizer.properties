# /*
#  * MassLoadCustomizer.Properties
#  *
#  * IBM Confidential
#  * OCO Source Materials
#  *
#  * (C) Copyright IBM Corp. 2000, 2002
#  * This source code for this program is not published or otherwise
#  * divested of its trade secrets, irrespective of what has been
#  * deposited with the U.S. Copyright Office.
#  */


# QueueLowCount  = 35
# QueueHighCount = 3000

# /**
#  * This is where the users can add their own classes to customize the
#  * behavior of WCA MassLoader.
#  *
#  * MassLoadDirectorCustomization Variables.
#  *-------------------------------
#  *       The following IDs can be given values of classes that users want to 
#  *       subtitute instead of the Defaults provided by WCA.
#  *
#  *       ParserName      -> name of the Parser to be used by the director.
#  *       ValidatorName   -> name of the Validator to be used by the director.
#  *       FormatterName   -> name of the Formatter to be used by the director.
#  *       WriterName      -> name of the Writer to be used by the director.
#  *
#  *       For example to subtitute the DefaultWriter of massloader with
#  *       the Writer, "com.abc.writer.SpecialWriter", set:
#  *
#  *       WriterName = com.abc.writer.SpecialWriter
#  *
#  * ParserCustomization Variables.
#  *-------------------------------
#  *
#  *       IgnoreElements -> A ';' delimited string that has elements that should not be processed by validator.
#  *       
#  *       Example:
#  *       To ignore elements "import", "literals" and "ProductRepository", use;
#  * 
#  *       IgnoreElements = "import;literals;ProductRepository"
#  *
#  */

# // IgnoreElements = import;literals;ProductRepository
# // ColumnDelimiter = ;
# // CharacterDelimiter = \"
ColumnDelimiter = ;
CharacterDelimiter = "
# /**
#  * parameter 0 = filename
#  * parameter 1 = column delimiter
#  * parameter 2 = character delimiter
#  * parameter 3 = name of the table
#  * parameter 4 = name of the columns, separated by comma(,)s 
#  */
# // DBLoadTableCommand = load from {0} of del modified by coldel{1} chardel{2} insert into {3} ({4})
# // DBLoadTableCommand = load from {0} of del modified by coldel{1} insert into {3} ({4});
DBLoadTableCommand = CPYFRMIMPF FROMFILE({0}/IMPF  {3}) TOFILE({0}/{3}) MBROPT(*add) RCDDLM(*ALL) FLDDLM(''{1}'') STRDLM(''{2}'') FROMCCSID(13488)   
# /**
#  * parameter 0 = filename
#  * parameter 1 = column delimiter
#  * parameter 2 = character delimiter
#  * parameter 3 = name of the table
#  * parameter 4 = name of the columns, separated by comma(,)s 
#  */
# // DBUpdateTableCommand = load from {0} of del modified by coldel{1} chardel{2} insert into {3} ({4})
# // DBUpdateTableCommand = load from {0} of del modified by coldel{1} insert into {3} ({4});
# // QueueHighCount=10000
# // QueueLowCount=600
DBUpdateTableCommand = CPYFRMIMPF FROMFILE({0}/IMPF  {3}) TOFILE({0}/{3}) MBROPT(*updadd) RCDDLM(*ALL) FLDDLM(''{1}'') STRDLM(''{2}'') FROMCCSID(13488)   

# /**
# *   Input Timestamp formats.
# *   Add as many as desired.
# *   Pattern key.
# *   -----------
# *      Pattern        US Example
# *   Year: 
# *      yy             78 
# *      yyyy           1978
# *   Month:
# *      MM             03
# *      MMM            Mar
# *      MMMM           March
# *   Day:
# *      dd             13
# *      DD             13
# *   Hour:
# *      hh             02
# *      HH             02
# *   Minute:
# *      mm             45
# *   Second:
# *      ss             45
# *   Fractional Second:
# *      SSS            45       // micro second
# *      SSSSSS         450000   // nano second
# */
# /**
# *   Input Timestamp formats.
# *   Add as many as desired.
# *   Pattern key.
# *   -----------
# *      Pattern        US Example
# *   Year: 
# *      yy             78 
# *      yyyy           1978
# *   Month:
# *      MM             03
# *      MMM            Mar
# *      MMMM           March
# *   Day:
# *      dd             13 ( Day in month )
# *      DD             83 ( Day in year )
# *   Hour:
# *      hh             02 (12 hour)
# *      HH             02 (24 hour)
# *   Minute:
# *      mm             45
# *   Second:
# *      ss             45
# *   Fractional Second:
# *      SSS            450      // micro second
# *      SSSSSS         450000   // nano second
# */


InputTimeStampFormat.1 = yyyy-MM-dd hh:mm:ss.SSSSSS 
InputTimeStampFormat.2 = yyyy-MM-dd-hh.mm.ss.SSSSSS
InputTimeStampFormat.3 = yyyy-MM-dd-HH.mm.ss.SSSSSS
InputTimeStampFormat.4 = yyyy-MM-dd HH:mm:ss.SSSSSS 
InputTimeStampFormat.5 = yyyy-MM-DD hh:mm:ss.SSSSSS 
InputTimeStampFormat.6 = yyyy-MM-DD-hh.mm.ss.SSSSSS 
InputTimeStampFormat.7 = yyyy-MM-DD HH:mm:ss.SSSSSS 

# /** 
#  * The connect string. 
#  */

ConnectStringID = jdbc:db2://


# /** 
#  * The JDBC driver name
#  */

JDBCDriverName = com.ibm.db2.jdbc.app.DB2Driver
DbVendorName=DB2/iSeries



